name: Build

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      #- '*'  # for every push, run build

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            TARGET: ubuntu
            CMD_BUILD: "pip install antspyx &&
                       pyinstaller --noconfirm --clean --onefile main_custom_bundle.spec &&
                       mkdir -p GSI-RADS-0.1.1_Ubuntu/usr/local/bin &&
                       cp -r dist/GSI-RADS GSI-RADS-0.1.1_Ubuntu/usr/local/bin &&
                       dpkg-deb --build --root-owner-group GSI-RADS-0.1.1_Ubuntu &&
                       cp -r GSI-RADS-0.1.1_Ubuntu.deb dist/GSI-RADS-1.3-ubuntu.deb"
            OUT_FILE_NAME: GSI-RADS-1.3-ubuntu.deb
            ASSET_MIME: application/vnd.debian.binary-package

          - os: macos-10.15
            TARGET: macos
            CMD_BUILD: "pip install https://github.com/ANTsX/ANTsPy/releases/download/v0.1.8/antspyx-0.1.8-cp37-cp37m-macosx_10_14_x86_64.whl &&
                       pyinstaller --noconfirm --clean --onefile main_custom_macos.spec &&
                       git clone https://github.com/scriptingosx/quickpkg.git &&
                       quickpkg/quickpkg dist/GSI-RADS.app --output GSI-RADS-1.3-macOS.pkg &&
                       cp -r GSI-RADS-1.3-macOS.pkg dist/GSI-RADS-1.3-macOS.pkg"
            OUT_FILE_NAME: GSI-RADS-1.3-macOS.pkg
            ASSET_MIME: application/x-newton-compatible-pkg

          - os: windows-latest
            TARGET: windows
            CMD_BUILD: "pip install https://github.com/SGotla/ANTsPy/releases/download/0.1.7Win64/antspy-0.1.7-cp37-cp37m-win_amd64.whl &&
                       pyinstaller --noconfirm --clean --onefile main_custom_bundle.spec &&
                       cp -r dist/ win_installer/dist &&
                       cd win_installer &&
                       makensis.exe GSI-RADS.nsi &&
                       cp -r GSI-RADS-installed.exe ../dist/GSI-RADS-1.3-win.exe"
            OUT_FILE_NAME: GSI-RADS-1.3-win.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller==4.2
      #runs-on: windows
      #  pip install https://github.com/SGotla/ANTsPy/releases/download/0.1.7Win64/antspy-0.1.7-cp37-cp37m-win_amd64.whl
      #runs-on: ubuntu
      #  pip install pyantsx
      #runs-on: macos
      #  pip install pyantsx

    - name: Build with pyinstaller for ${{matrix.TARGET}}
      uses: joncloud/makensis-action@v3.6
      with:
        arguments: "/V3"
      run: ${{matrix.CMD_BUILD}}
      if: ${{ matrix.os == 'windows-latest' }}

    - name: Build with pyinstaller for ${{matrix.TARGET}}
      if: ${{ matrix.os != 'windows-latest' }}

    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          #build\main_custom_bundle\GSI-RADS.exe
        #./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
